{
	"openapi": "3.1.0",
	"info": {
		"title": "Message Board API",
		"version": "1.0.1"
	},
	"servers": [{
		"url": "http://10.21.75.134:3004/v1",
		"description": "Message Board API Dev Server"
	}],
	"security": [],
	"components": {
		"securitySchemes": {
			"bearerAuth": {
				"type": "http",
				"scheme": "bearer",
				"bearerFormat": "JWT"
				}
			},
		"schemas": {
			"message": {
				"type": "object",
				"description": "A message",
				"required": [
					"name",
					"msgText"
				],
				"properties": {
					"name": {
						"type": "string",
						"minLength": 3,
						"maxLength": 15,
						"pattern": "^[A-Za-z0-9_]+$",
						"description": "Name of User who created the message.",
						"example": "Fred"
					},
					"msgText": {
						"type": "string",
						"minLength": 2,
						"maxLength": 30,
						"description": "A message's text.",
						"example": "Hello World!"
					}
				}
			},
			"messageWithId": {
				"allOf": [{
						"$ref": "#/components/schemas/message"
					},
					{
						"type": "object",
						"description": "A message with id",
						"required": [
							"id"
						],
						"properties": {
							"id": {
								"type": "number",
								"description": "message's id.",
								"example": 1
							}
						}
					}
				]
			},
			"user": {
				"type": "object",
				"description": "User information, email, username, and password",
				"required": [
					"email",
					"username",
					"password"
				],
				"properties": {
					"email": {
						"type": "string",
						"format": "email",
						"description": "Email of the user",
						"example": "user@user.com"
					},
					"username": {
						"type": "string",
						"minLength": 3,
						"maxLength": 15,
						"pattern": "^[A-Za-z0-9_]+$",
						"description": "The username of a user, used for logging in",
						"example": "TTbowe"
					},
					"password": {
						"type": "string",
						"format": "password",
						"minLength": 8,
						"maxLength": 64,
						"description": "a users Password, kept secret",
						"example": "PassW0rD2!S3C5t"
					}
				}
			}, 
			"userWithId": {
				"allOf": [{
						"$ref": "#/components/schemas/user"
					},
					{
						"type": "object",
						"description": "A user with id",
						"required": [
							"id"
						],
						"properties": {
							"id": {
								"type": "number",
								"description": "users's id.",
								"example": 1
							}
						}
					}
				]
			},
			"login": {
				"type": "object",
				"description": "User information, email, username, and password",
				"required": [
					"username",
					"password"
				],
				"properties": {
					"username": {
						"type": "string",
						"minLength": 3,
						"maxLength": 50,
						"description": "The username of a user, used for logging in",
						"example": "TTbowe"
					},
					"password": {
						"type": "string",
						"format": "password",
						"minLength": 8,
						"maxLength": 64,
						"description": "a users Password, kept secret",
						"example": "PassW0rD2!S3C5t"
					}
				}
			}
			
		},"responses": {
			"429TooManyRequests": {
				"description": "Too many requests."
				}
			}
	},
	"paths": {
		"/messages": {
			"description": "All the messages",
			"get": {
				"summary": "List all the messages",
				"operationId": "getAllMessages",
				"description": "List all the messages in the order they were posted (newest at top).",
				"responses": {
					"200": {
						"description": "All the messages",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/messageWithId"
									}
								}
							}
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"429": {
						"$ref": "#/components/responses/429TooManyRequests"
					}
				}
			},
			"post": {
				"security": [
					{ "bearerAuth": [] }
					],
				"summary": "Add new message to messages",
				"operationId": "addNewMessage",
				"description": "Adding a new message to the messages array ",
				"requestBody": {
					"description": "Message's data",
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/message"
							}
						}
					}
				},
				"responses": {
					"201": {
						"description": "Created: Added new message",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/messageWithId"
								}
							}
						}
					},
                    "400": {
						"description": "Bad Request - Message in the body of the request is missing or malformed "
					},
					"401": {
						"description": "Bad Request - password or username doesn't match "
					},
					"429": {
						"$ref": "#/components/responses/429TooManyRequests"
					}
				}
			}
		},
		"/users" : {
			"description": "All the users",
			"post": {
				"summary": "Add new user to users",
				"operationId": "registerNewUser",
				"description": "Adding a new user to the users array ",
				"requestBody": {
					"description": "users's data",
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/user"
							}
						}
					}
				},
				"responses": {
					"201": {
						"description": "Created: Added new User",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/userWithId"
								}
							}
						}
					},
                    "400": {
						"description": "Bad Request - The User in the body of the request is missing or malformed "
					},
					"423": {
						"description": "Forbidden - Username or Email already exists "
					},
					"429": {
						"$ref": "#/components/responses/429TooManyRequests"
					}
				}
			}
		},
		"/login" : {
			"description": "login information",
			"post": {
				"summary": "Add new user login data",
				"operationId": "loginUser",
				"description": "sending in login information from the userd ",
				"requestBody": {
					"description": "users's data",
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"description": "User information, email, username, and password",
								"required": [
									"username",
									"password"
								],
								"properties": {
									"username": {
										"type": "string",
										
										"maxLength": 50,
										"description": "The username of a user, used for logging in",
										"example": "TTbowe"
									},
									"password": {
										"type": "string",
										"format": "password",
										
										"maxLength": 64,
										"description": "a users Password, kept secret",
										"example": "PassW0rD2!S3C5t"
									}
								}
							}
							
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successfully logged in.",
						"content": {
						"application/json": {
						"schema": {
						"type": "object",
						"description": "JWT Token",
						"properties": {
						"token": {
						"type": "string"
						}
						}
						}
						}
						}
						},
                    "400": {
						"description": "Bad Request - The User in the body of the request is missing or malformed "
					},
					"401": {
						"description": "Bad Request - password or username doesn't match "
					},
					"423": {
						"description": "Forbidden - Username or Email already exists "
					},
					"429": {
						"$ref": "#/components/responses/429TooManyRequests"
					}
				}
			}
		}
	}
}